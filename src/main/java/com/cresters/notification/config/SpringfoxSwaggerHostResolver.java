package com.cresters.notification.config;import io.swagger.v3.oas.models.OpenAPI;import io.swagger.v3.oas.models.servers.Server;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Component;import springfox.documentation.oas.web.OpenApiTransformationContext;import springfox.documentation.oas.web.WebMvcOpenApiTransformationFilter;import springfox.documentation.spi.DocumentationType;import javax.servlet.http.HttpServletRequest;import java.util.Collections;import java.util.Objects;/** * @author Shalom Olomolaiye * @philosophy It's not "CODE" It's how you think... Think and solve the problem * Growth is when you keep finding efficient ways to solve the problem * <p> * ------ * Tip: Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live. * 'Cause he is violent,and he knows where you live. * ------ * Anyway, welcome to the SpringfoxSwaggerHostResolver class... HAPPY THINKING * @since 15/09/2022 2:43 PM */@Componentpublic class SpringfoxSwaggerHostResolver implements WebMvcOpenApiTransformationFilter {    @Value("${spring.profiles.active}")    String profile;    @Override    public OpenAPI transform(OpenApiTransformationContext<HttpServletRequest> context) {        OpenAPI swagger = context.getSpecification();        Server localServer = new Server();        localServer.setUrl("http://localhost:58240");        Server credoDemoServer = new Server();        credoDemoServer.setUrl("https://api.credodemo.com/settlement");        swagger.setServers(Objects.equals("local", profile) ? Collections.singletonList(localServer) :                Collections.singletonList(credoDemoServer));        return swagger;    }    @Override    public boolean supports(DocumentationType docType) {        return docType.equals(DocumentationType.OAS_30);    }}